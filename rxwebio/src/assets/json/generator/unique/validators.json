{"rightSidebarLinks":[{"id":"unique","title":"unique (Validator)","subLink":null},{"id":"whentouse","title":"When to use","subLink":[]},{"id":"basicuniquevalidation","title":"Basic Unique Validation","subLink":[]},{"id":"uniqueconfig","title":"UniqueConfig","subLink":[{"title":"additionalValidation","id":"additionalvalidation"},{"title":"conditionalExpression","id":"conditionalexpression"},{"title":"message","id":"message"}]},{"id":"completeuniqueexample","title":"Complete Unique Example","subLink":[]},{"id":"dynamicuniqueexample","title":"Dynamic Unique Example","subLink":[]},{"id":"githubissues","title":"unique Github Issues","subLink":null},{"id":"discussion","title":"Discussion","subLink":null}],"title":"unique","description":" Unique validation validators is used to validate unique input based on formArray.","validatorType":"validators","validationTypeTitle":"Validators","tabArray":{"complete":[{"tabName":"Example","tabGroupContent":null,"content":"<div component=\"app-example-runner\" ref-component=\"app-unique-complete\"></div>\r\n"},{"tabName":"Component","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"unique-complete-component\"></div> \r\n"},{"tabName":"Html","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"unique-complete-html\"></div> \r\n"}],"dynamic":[{"tabName":"Example","tabGroupContent":null,"content":"<div component=\"app-example-runner\" ref-component=\"app-unique-dynamic\"></div>\r\n"},{"tabName":"Component","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"unique-dynamic-component\"></div>\r\n"},{"tabName":"Json","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"unique-dynamic-json\"></div>\r\n"},{"tabName":"Html","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"unique-dynamic-html\"></div> \r\n"}]},"innerHtml":null,"htmlContent":"<div class='row page-section' id= 'whentouse'>\r\n<div class='col-lg-12'>\r\n<h2 class='showHideElement' >When to use<a title='Link to this heading' class='link-header' href='/form-validations/unique/validators#whentouse'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Suppose you want to create a Employee form, which contains fields like fullName, skillName, projectDomain, companyName and hobbies and you want the user to enter unique values which are not previously mentioned in the array. Here depending upon the requirement these scenarios may arise.</p>\r\n<ol class = 'showHideElement'>\r\n<li>Apply unique validation on skillName field.</li>\r\n<li>Apply unique validation based on matched condition in the form, like if the fullName is 'Bharat Patel' then the projectDomain input values must be unique.</li>\r\n<li>Apply unique validation based on matched condition in the form, like if the fullName is 'Bharat Patel' then the companyName input values must be unique.</li>\r\n<li>Adding Custom Message on hobbies Field.</li>\r\n\t<data-scope scope=\"['decorator','validator']\">\r\n\t\t<li>Apply unique validation dynamically based on server rules. </li>\r\n\t</data-scope>\r\n</ol>\r\n<p class='showHideElement' >Let's see how unique validator fulfil the need.</p>\r\n</div></div>\r\n<div class='row page-section' id= 'basicuniquevalidation'>\r\n<div class='col-lg-12'>\r\n<h2>Basic Unique Validation<a title='Link to this heading' class='link-header' href='/form-validations/unique/validators#basicuniquevalidation'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Through Angular FormBuilder service we create FormGroup in the component.</p>\r\n<div component=\"app-code\" key=\"unique-add-component\"></div> \r\n<p class='showHideElement' >Next, we need to write html code.</p>\r\n<div component=\"app-code\" key=\"unique-add-html\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-unique-add\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'uniqueconfig'>\r\n<div class='col-lg-12'>\r\n<h2 class='showHideElement' >UniqueConfig<a title='Link to this heading' class='link-header' href='/form-validations/unique/validators#uniqueconfig'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Below options are not mandatory to use in the <span class='highlighted'>RxwebValidators.unique()</span> validator. If needed then use the below options.</p>\r\n<table class=\"table table-bordered table-striped showHideElement\">\r\n<tr><th>Option</th><th>Description</th></tr>\r\n<tr><td><a  (click)='scrollTo(\"#additionalValidation\")' title=\"additionalValidation\">additionalValidation</a></td><td>if user wants to validate the colum based on some other values of the row as well, then additional validation comes into the picture</td></tr>\r\n<tr><td><a  (click)='scrollTo(\"#conditionalExpression\")' title=\"conditionalExpression\">conditionalExpression</a></td><td>unique validation should be applied if the condition is matched in the <span class='highlighted'>conditionalExpression</span> function. Validation framework will pass two parameters at the time of <span class='highlighted'>conditionalExpression</span> check. Those two parameters are current <span class='highlighted'>FormGroup</span> value and root <span class='highlighted'>FormGroup</span> value. You can apply the condition on respective object value.If there is need of dynamic validation means it is not fixed in client code, it will change based on some criterias. In this scenario you can bind the expression based on the expression value is coming from the web server in <span class='highlighted'>string</span> format. The <span class='highlighted'>conditionalExpression</span> will work as same as client function.</td></tr>\r\n<tr><td><a  (click)='scrollTo(\"#message\")' title=\"message\">message</a></td><td>To override the global configuration message and set the custom error message on respective FormControl</td></tr>\r\n</table>\r\n</div></div>\r\n<div class='row page-section' id= 'additionalvalidation'>\r\n<div class='col-lg-12'>\r\n<h2>additionalValidation<a title='Link to this heading' class='link-header' href='/form-validations/unique/validators#additionalvalidation'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type :  <span class='highlighted'>Function</span></p>\r\n<p class='showHideElement' >If user wants to validate the colum based on some other values of the row as well, then additional validation comes into the picture</p>\r\n<div component=\"app-code\" key=\"unique-additionalValidationExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-unique-additionalValidation\" title=\"unique validator with additionalValidation\" key=\"additionalValidation\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'conditionalexpression'>\r\n<div class='col-lg-12'>\r\n<h2>conditionalExpression<a title='Link to this heading' class='link-header' href='/form-validations/unique/validators#conditionalexpression'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type :  <span class='highlighted'>Function</span>  |  <span class='highlighted'>string</span> </p>\r\n<p class='showHideElement' >unique validation should be applied if the condition is matched in the <span class='highlighted'>conditionalExpression</span> function. Validation framework will pass two parameters at the time of <span class='highlighted'>conditionalExpression</span> check. Those two parameters are current <span class='highlighted'>FormGroup</span> value and root <span class='highlighted'>FormGroup</span> value. You can apply the condition on respective object value.</p>\r\n<p class='showHideElement' >If there is need of dynamic validation means it is not fixed in client code, it will change based on some criterias. In this scenario you can bind the expression based on the expression value is coming from the web server in <span class='highlighted'>string</span> format. The <span class='highlighted'>conditionalExpression</span> will work as same as client function.</p>\r\n<blockquote class='showHideElement' ><p>Binding <span class='highlighted'>conditionalExpression</span> with <span class='highlighted'>Function</span> object.</p></blockquote>\r\n<div component=\"app-code\" key=\"unique-conditionalExpressionExampleFunction-model\"></div> \r\n<blockquote class='showHideElement' ><p>Binding <span class='highlighted'>conditionalExpression</span> with <span class='highlighted'>string</span> object.</p></blockquote>\r\n<div component=\"app-code\" key=\"unique-conditionalExpressionExampleString-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-unique-conditionalExpression\" title=\"unique validator with conditionalExpression\" key=\"conditionalExpression\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'message'>\r\n<div class='col-lg-12'>\r\n<h2>message<a title='Link to this heading' class='link-header' href='/form-validations/unique/validators#message'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >Type :  <span class='highlighted'>string</span> </p>\r\n<p class='showHideElement' >To override the global configuration message and set the custom message on respective FormControl.</p>\r\n<div component=\"app-code\" key=\"unique-messageExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-unique-message\" title=\"unique validator with message\" key=\"message\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'completeuniqueexample'>\r\n<div class='col-lg-12'>\r\n<h2>Complete Unique Example<a title='Link to this heading' class='link-header' href='/form-validations/unique/validators#completeuniqueexample'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >This Complete Unique example which includes all the BaseConfig properties will fulfil the requirement of scenarios 1 ,2 and 3.</p>\r\n<div component=\"app-tabs\" key=\"complete\"></div>\r\n</div></div>\r\n<div class='row page-section' id= 'dynamicuniqueexample'>\r\n<div class='col-lg-12'>\r\n<h2>Dynamic Unique Example<a title='Link to this heading' class='link-header' href='/form-validations/unique/validators#dynamicuniqueexample'><i class='fa fa-link'></i></a></h2>\r\n\r\n<p class='showHideElement' >This Dynamic unique example which execute based on json passed. conditional expression with function would be not apply in dynamic unique example. </p>\r\n<div component=\"app-tabs\" key=\"dynamic\"></div>\r\n</div></div>\r\n<div class=\"row page-section\" id=\"githubissues\">\r\n<div class=\"col-lg-12\">\r\n<h2>Github Issues<a title='Link to this heading' class='link-header' href='/form-validations/unique/validators#githubissues' fragment='githubissues'><i class='fa fa-link'></i></a></h2>\r\n<div component=\"app-github-issue\"></div>\r\n</div>\r\n</div>\r\n<div class=\"row page-section\" id=\"discussion\">\r\n<div class=\"col-lg-12\">\r\n<div component=\"app-disqus\"></div>\r\n</div>\r\n</div>\r\n"}