{
    "add": {
        "notes": [],
        "component": "import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\n\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\nimport { User } from './user.model';\r\n\r\n\r\n@Component({\r\n    selector: 'app-disable-add',\r\n    templateUrl: './disableControlConditionally-add.component.html'\r\n})\r\nexport class DisableControlConditionallyDecoratorAddComponent implements OnInit {\r\n    currentMode :string = \"View\"\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n\r\n    changeMode(){\r\n      this.currentMode = this.currentMode == \"View\" ? \"Edit\": \"View\";\r\n      this.userFormGroup.controls.modeType.setValue(this.currentMode);\r\n    }\r\n\r\n}",
        "html": "<h1 class=\"bd-title\" id=\"content\">Disable FormControl Conditionally</h1>\r\n<br/>\r\n<form *ngIf=\"userFormGroup\" [formGroup]=\"userFormGroup\">\r\n  <div class=\"form-group\">\r\n    <button class=\"btn btn-primary\" (click)=\"changeMode()\">Change Mode {{currentMode}}</button>\r\n    \r\n</div>\r\n<div class=\"form-group\">\r\n    <label>Full Name</label>\r\n    <input type=\"text\" formControlName=\"fullName\" class=\"form-control\"  />\r\n </div>  \r\n</form>",
        "model": "import {  required,disable,prop } from \"@rxweb/reactive-form-validators\"\r\nimport { AbstractControl } from \"@angular/forms\"\r\n\r\nexport class User{\r\n\r\n    @prop()\r\n    modeType:string;\r\n\r\n    @disable({conditionalExpression:function(control:AbstractControl){return this.modeType == \"View\"; }})\r\n    @prop()\r\n    fullName:string;\r\n \r\n}",
        "modelName": "user.model.ts",
        "json": {}
    }
}